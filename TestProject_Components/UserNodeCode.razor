@using Excubo.Blazor.Diagrams
@inherits NodeBase
@using Excubo.Blazor.Diagrams.Extensions
<!--This using statement helps with locales that do not have the period as decimal separator: The DOM expects the period as decimal separator.-->
@using (var temporary_culture = new CultureSwapper())
{
    <!--The outer g is mandatory (takes care of scaling and correct placement for you)-->
    <g transform="translate(@GetCoordinates()) scale(@Zoom)">
        <!--Beginning of the customizable part-->
        <g transform="translate(@(-Width / 2) @(-Height / 2))">
            <!--This defines the area which can be interacted with to create links To debug this, set the stroke to a visible color. fill is set to none so that only the border is interactive -->
            <!--Mandatory: onmouseover="OnBorderOver" and onmouseout="OnBorderOut" -->
            <rect width="@Width"
                  height="@Height"
                  style="@(Hidden? "display:none" : "")"
                  stroke="transparent"
                  stroke-width="@(1 / Zoom)rem"
                  fill="none"
                  @onmouseover="OnBorderOver"
                  @onmouseout="OnBorderOut" />
            <!--This defines the area which can be interacted with to select/move the node. -->
            <!--Mandatory: onmouseover="OnNodeOver" and onmouseout="OnNodeOut" -->
            <rect width="@Width"
                  height="@Height"
                  @onmouseover="OnNodeOver"
                  @onmouseout="OnNodeOut"
                  stroke="@Stroke"
                  stroke-width="2px"
                  fill="@Fill"
                  style="@(Hidden? "display:none;" : "") @(Selected ? "stroke-dasharray: 8 2; animation: diagram-node-selected 0.4s ease infinite;" : "")" />
        </g>
        <!--End of the customizable part-->
    </g>
}
@code {
    public override (double RelativeX, double RelativeY) GetDefaultPort()
    {
        return (Width / 2, 0);
    }
}