@page "/performance"
@using Excubo.Blazor.Diagrams

<Diagram @ref="Diagram">
    <Nodes>
        @foreach (var state in states)
        {
            <!-- Builtin node, node-type (i.e. shape) specified by Type property -->
            <Node @key="state.Id" Id="@state.Id" X="state.X" Y="state.Y" Type="NodeType.Rectangle">
                State @state.Id
            </Node>
        }
    </Nodes>
    <Links>
        @for (int i = 0; i < n * n; i += 2)
        {
            <Link Source="@Diagram.GetAnchorTo($"state{i}")" Target="@Diagram.GetAnchorTo($"state{i + 1}")" />
        }
    </Links>
</Diagram>

@code {
    private const int n = 10;
    public class MyNodeDefinition
    {
        public string Id { get; set; }
        public double X { get; set; }
        public double Y { get; set; }
    }
    List<MyNodeDefinition> states = Enumerable.Range(0, n * n).Select(i => new MyNodeDefinition
    {
        Id = $"state{i}",
        X = 100 * (i % n),
        Y = 100 * (i / n)
    }).ToList();
    private Diagram Diagram { get; set; }
}